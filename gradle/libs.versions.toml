[versions]
# --- Project metadata ---
version-name = "1.2.1"
version-date = "26.09.2025"
android-version-code = "8"

# --- Android SDK & AGP ---
android-compileSdk = "36"
android-minSdk = "24"
android-targetSdk = "35"
agp = "8.11.2"

# --- Kotlin Toolchain & Compose ---
kotlin = "2.2.10"
compose-multiplatform = "1.9.0"

# --- Core AndroidX ---
androidx-core = "1.17.0"
androidx-appcompat = "1.7.1"
androidx-activityCompose = "1.11.0"
androidx-lifecycle = "2.9.3"

# --- KotlinX & Utilities ---
kotlinx-coroutines = "1.10.2"
coroutines-test-ver = "1.10.2"
#Change after the issue is fixed https://youtrack.jetbrains.com/projects/CMP/issues/CMP-8519/Migrate-to-kotlinx-datetime-0.7.1
kotlinx-datetime = "0.7.1-0.6.x-compat"
okio = "3.16.0"

# --- Logging & Monitoring ---
kermit = "2.0.8"
slf4j = "2.0.17"

# --- UI & UX ---
reorderable = "2.5.1"
paging = "2.2.1"
dnd = "0.4.0"
colorpicker = "1.1.2"

# --- Testing & Tooling ---
assertk = "0.28.1"
turbine = "1.2.1"
ksp = "2.2.10-2.0.2"
hotReload = "1.0.0-beta07"
buildKonfig = "0.17.1"
detekt = "1.23.8"
ktlint-gradle = "13.1.0"
kover = "0.9.1"
dokka = "2.0.0"
mavenPublish = "0.34.0"

[libraries]
# --- AndroidX Core & Lifecycle ---
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# --- Kotlin & Core Utils ---
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

# --- Coroutines ---
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }

# --- UI: Compose & Navigation ---
reorderable = { module = "sh.calvin.reorderable:reorderable", version.ref = "reorderable" }
paging-core = { module = "ua.wwind.paging:paging-core", version.ref = "paging" }
dnd = { module = "com.mohamedrejeb.dnd:compose-dnd", version.ref = "dnd" }
colorpicker = { module = "com.github.skydoves:colorpicker-compose", version.ref = "colorpicker" }

# --- Logging & Monitoring ---
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-log4j12 = { module = "org.slf4j:slf4j-log4j12", version.ref = "slf4j" }

# --- Testing ---
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test-ver" }
turbine-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# --- Gradle Build Plugins ---
# External Gradle plugin artifacts for buildscript/pluginManagement classpaths
# AGP
gradle-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
gradle-android-library = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }

# Kotlin (core plugin)
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-kotlin-multiplatform = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }

# Kotlin compiler plugins
gradle-kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
gradle-kotlin-allopen = { module = "org.jetbrains.kotlin.plugin.allopen:org.jetbrains.kotlin.plugin.allopen.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-compose-compiler = { group = "org.jetbrains.kotlin.plugin.compose", name = "org.jetbrains.kotlin.plugin.compose.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-parcelize = { group = "org.jetbrains.kotlin.plugin.parcelize", name = "org.jetbrains.kotlin.plugin.parcelize.gradle.plugin", version.ref = "kotlin" }
gradle-kotlin-cocoapods = { group = "org.jetbrains.kotlin.native.cocoapods", name = "org.jetbrains.kotlin.native.cocoapods.gradle.plugin", version.ref = "kotlin" }

# Compose Multiplatform
gradle-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
gradle-compose-hot-reload = { module = "org.jetbrains.compose.hot-reload:hot-reload-gradle-plugin", version.ref = "hotReload" }

# KSP
gradle-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

# Resources & Multiplatform tooling
gradle-buildkonfig = { module = "com.codingfeline.buildkonfig:com.codingfeline.buildkonfig.gradle.plugin", version.ref = "buildKonfig" }
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin", version.ref = "detekt" }
gradle-ktlint = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint-gradle" }
gradle-kover = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
gradle-dokka = { module = "org.jetbrains.dokka:org.jetbrains.dokka.gradle.plugin", version.ref = "dokka" }
gradle-maven-publish = { module = "com.vanniktech.maven.publish:com.vanniktech.maven.publish.gradle.plugin", version.ref = "mavenPublish" }

[plugins]
# --- Kotlin Toolchain ---
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# --- Compose ---
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
hot-reload = { id = "org.jetbrains.compose.hot-reload", version.ref = "hotReload" }

# --- Android (AGP) ---
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

# --- KSP ---
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# --- Resources & Multiplatform tooling ---
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }

# --- Testing utilities ---
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint-gradle" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "mavenPublish" }
